//    PLUGINS
// ==============
plugins {
    id 'java'
    id 'application'
    // publish
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.2'
    // ide
    id 'idea'
    id 'eclipse'
    // test coverage
    id 'jacoco'
    // integration tests
    id 'org.unbroken-dome.test-sets' version '1.2.0'
    // fat/ubur/one/shadow jar
    id 'com.github.johnrengelman.shadow' version '1.2.2'
}

//    METADATA
// ==============
version = '3.1.0'

description = 'Osmium: Xenon Job Webservice'
mainClassName = 'nl.esciencecenter.osmium.JobLauncherService'

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    xenonVersion = '1.1.0'
    dropwizardVersion = '0.8.2'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

//  DEPENDENCIES
// ==============

repositories {
  jcenter()
  mavenCentral()
}

dependencies {
  compile group: 'io.dropwizard', name: 'dropwizard-core', version: dropwizardVersion
  compile group: 'io.dropwizard', name: 'dropwizard-client', version: dropwizardVersion

  compile group: 'nl.esciencecenter.xenon', name: 'xenon', version: xenonVersion

  // Testing dependencies
  testCompile group: 'io.dropwizard', name: 'dropwizard-testing', version: dropwizardVersion
  testCompile group: 'junit', name: 'junit', version: '4.12'

  testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
  testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
  testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '1.6.2'
  testCompile group: 'org.powermock', name: 'powermock-api-mockito', version: '1.6.2'
  testCompile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5', classifier: 'tests'
}

//     TEST
// ==============

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

testSets {
    integrationTest { dirName = 'integration-test' }
}

//Ensure that the check task fails the build if there are failing integration tests.
check.dependsOn integrationTest
//Ensure that our unit tests are run before our integration tests
integrationTest.mustRunAfter test

//Ensure that the HTML reports of unit and integration tests are written to different directories.
tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}


//     PACKAGE
// ==============
jar {
  manifest {
    attributes(
      'Implementation-Title': 'Osmium',
      'Implementation-Version': version,
      'Main-Class': mainClassName,
    )
  }
}

shadowJar {
  mergeServiceFiles()
  exclude 'META-INF/*.DSA'
  exclude 'META-INF/*.RSA'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

//      RUN
// ==============

run {
  main = mainClassName
  description = "Osmium job launcher"
  args = ['server', 'joblauncher.yml']
}

//    CHECK
// ==============

//     PUBLISH
// ==============
publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            groupId 'nl.esciencecenter.xenon'
            artifactId 'osmium'
            version version

            artifact sourcesJar
            artifact javadocJar
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    pkg {
      repo = 'xenon'
      name = 'osmium'
      desc = description
      userOrg = 'nlesc'
      licenses = ['Apache-2.0']
      websiteUrl = 'https://github.com/NLeSC/osmium'
      vcsUrl = 'https://github.com/NLeSC/osmium.git'
      issueTrackerUrl = 'https://github.com/NLeSC/osmium/issues'
    }
    publications = ['MyPublication']
}
